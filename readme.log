Notes:

Check arrays/myExpenseTracker.js

CMD + shift + R ( browser reset)

All functionality in two file: index.html and notes-app.js (commit 5)

notes-app refactored into 3 files

with Firefox debugger + esc (opens the console window)

Made some fixes to todo-app conserning function generateTodoDOM() kept part of code
in todo-app.ja

commit_9: 
- added uuidv4 library as an inline libray uuidv4.js
- added checkbok functionality

To take notes hash #id up use: location.hash

e.g. location.hash.substring(1, 3)

commit_10:
- added functionality to notes-app
- added second page and moving backwords

commit_11
-using getTime() and timestamp in notes-app  // mdn date

 const dayOne = new Date('January 21 2008 16:05:00')
 const timestampOne = dayOne.getTime()
 const dayTwo = new Date('January 21 2008 16:05:00')
 const timestampTwo = dayTwo.getTime()

 if(timestampOne < timestampTwo){
     console.log(dayOne.toString())
} else {
     console.log(dayTwo.toString())
 }

commit_11:
momentjs.com

momment library: https://cdnjs.com/libraries/moment.js
https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.23.0/moment-with-locales.min.js

wired up moment().valueOf() part I 

commit_12:

added sorting functions to notes-app

commit_13: 

converting to arrow functions

commit_14:

- using ternary operator

commit_15:
- error handling

commit_16:
- Hnagman game start

commit_17:
- Hangman game finished

commit_18:
- Prototypal inheritance changed to classes
- refactoring Person to class definition syntax

commit_19:
- refactored Hangman to class definition syntax

commit_20:
- getters and setters

commit_21:
- about closures & callback functions, see closures.js 
- take in though when desingning the Recipe-app !!

commit_22:
- refactoring callbacks to promises in hangman/requests.js file

commit_23:
- promise chaining and (XMLHttpRequest) -> fetch

commit_24:
- a tiny promise chaining challenge

commit_25:
- some async-await changes to fetch functions

commit_26:
- some code cleaning in app.ja and requests.js, left getLocation & getCountryCode functions remaining

commit_27:
- hangman-game functions ready 

commit_28:
- cleaning of hangman.js, commented code taken away
- some refactoring by using CSS-styles with layout outputs

commit_29:
- changed http-requests to requests without http infrontof in Hangman-game//
- http://ipinfo.io/json?token=3d4e7ffcf7483a -> //ipinfo.io/json?token=3d4e7ffcf7483a
- so that they work on both https and http sites

commit_30:
- basic boilerplate babel installed with -g flag

commit_31:
- boilerplate without webpack

commit_34:
- installing: /boilerplate$ npm install webpack@4.5.0 webpack-cli@2.0.14
- boilerplate ready for use

commit_35:
- converting notes-app to webpack
- npm install moment, import moment from 'moment';
- npm install uuid, import uuidv4 from 'uuid/v4'
- npm install validator, import validator from 'validator';

- small changes to boilerplate & hangman ported to webpack

commit_36: 
- converting Hangman to webpack once again
- made few corrections to Hangman (error in converting to webpack)

commit_37:
- different repos for Hangman mac and win

commit_38:
- notes-app to webpack one bug remaining in layout index-page last edited

commit_39:
- corretted small typo causing layout error

commit_40:
- converting todos-app to webpack bundle hanging ...

commit_41:
- minor errors / difficulties with filtering

commit_42:
- minor improvements, left some test code into index.js
- conversion todo-app ready

commit_43:
- rest and spread operator in boilerplate-copy
- installed: npm install babel-plugin-transform-object-rest-spread@6.26.0 also in boilerplate
- and adde to webpack.config -> plugins: ['transform-object-rest-spread'] also in boilerplate
- destructuring in todo-app filters and views
- other option in todo-app-new / filters.js

commit_44:
- recipe-app inserted ingredients text field into edit page, works ok

commit_45:
- basic functions, starting to build recipe-app
